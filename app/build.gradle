plugins {
    id 'application'
}

repositories {
    mavenCentral()
}

configurations {
    universal
    implementation.extendsFrom(universal)
}

dependencies {
    def jfx = 'org.openjfx:javafx'
    def ver = '21.0.4'
    def os = getOS()

    universal "${jfx}-base:${ver}:${os}"
    universal "${jfx}-graphics:${ver}:${os}"
    universal "${jfx}-controls:${ver}:${os}"
    universal "com.google.code.gson:gson:2.10.1"
    universal "io.github.classgraph:classgraph:4.8.172"
}

private static def getOS() {
    def os = System.getProperty('os.name').toLowerCase(Locale.ENGLISH)
    if (os.contains('win')) {
        return 'win'
    }
    if (os.contains('nix') || os.contains('nux')) {
        return 'linux'
    }
    if (os.contains('osx') || os.contains('mac')) {
        return 'mac'
    }
    assert false: "unknown os: $os"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    mainClass = 'dev.lisek.crazybytes.Run'
}

jar {
    manifest {
        attributes 'Main-Class': 'dev.lisek.crazybytes.Run'
    }
    from {
        configurations.universal.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
